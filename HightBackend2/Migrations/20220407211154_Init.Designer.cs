// <auto-generated />
using System;
using HightBackend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace HightBackend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220407211154_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("HightBackend.Models.Estabilishment", b =>
                {
                    b.Property<int>("estabilishmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("location")
                        .HasColumnType("text");

                    b.Property<float>("locationRating")
                        .HasColumnType("real");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<float>("overallRating")
                        .HasColumnType("real");

                    b.Property<float>("price_qualityRating")
                        .HasColumnType("real");

                    b.Property<float>("reviewNum")
                        .HasColumnType("real");

                    b.Property<float>("serviceRating")
                        .HasColumnType("real");

                    b.Property<string>("website")
                        .HasColumnType("text");

                    b.HasKey("estabilishmentId");

                    b.ToTable("Estabilishments");
                });

            modelBuilder.Entity("HightBackend.Models.EstabilishmentImage", b =>
                {
                    b.Property<int>("imageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<int?>("estabilishmentId")
                        .HasColumnType("integer");

                    b.HasKey("imageID");

                    b.HasIndex("estabilishmentId");

                    b.ToTable("EstabilishmentImages");
                });

            modelBuilder.Entity("HightBackend.Models.Event", b =>
                {
                    b.Property<int>("eventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("estabilishmentId")
                        .HasColumnType("integer");

                    b.Property<string>("eventImage")
                        .HasColumnType("text");

                    b.Property<string>("location")
                        .HasColumnType("text");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.Property<DateTime>("time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("title")
                        .HasColumnType("text");

                    b.HasKey("eventID");

                    b.HasIndex("estabilishmentId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("HightBackend.Models.EstabilishmentImage", b =>
                {
                    b.HasOne("HightBackend.Models.Estabilishment", "Estabilishment")
                        .WithMany("estabilishmentImages")
                        .HasForeignKey("estabilishmentId");

                    b.Navigation("Estabilishment");
                });

            modelBuilder.Entity("HightBackend.Models.Event", b =>
                {
                    b.HasOne("HightBackend.Models.Estabilishment", "estabilishment")
                        .WithMany("events")
                        .HasForeignKey("estabilishmentId");

                    b.Navigation("estabilishment");
                });

            modelBuilder.Entity("HightBackend.Models.Estabilishment", b =>
                {
                    b.Navigation("estabilishmentImages");

                    b.Navigation("events");
                });
#pragma warning restore 612, 618
        }
    }
}
